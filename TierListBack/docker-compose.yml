  version: '3.1'
  
  services:
    database:
      container_name: local_database
      image: postgres
      restart: always
      env_file:
        - .env
      environment:
        POSTGRES_USER: ${DATABASE_USER}
        POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        POSTGRES_DB: ${DATABASE_NAME}
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data  # Persistent volume
        - ./initdb:/docker-entrypoint-initdb.d
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
        - app-network
  
    app:
      container_name: back_skeleton_app
      build:
        context: .
        dockerfile: ./Dockerfile
      restart: always
      ports:
        - "8080:8080"
      depends_on:
        database:
          condition: service_healthy
      env_file:
        - .env
      networks:
        - app-network

    frontend:
      container_name: frontend_app
      build:
        context: ../TierListFront
        dockerfile: Dockerfile-angular
      depends_on:
        - app
      ports:
        - "4200:4200"
      networks:
        - app-network


  volumes:
    postgres_data:  # Define the volume
  
  networks:
    app-network:
      driver: bridge